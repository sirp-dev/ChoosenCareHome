// <auto-generated />
using System;
using ChoosenCareHome.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ChoosenCareHome.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240302145235_kjfd")]
    partial class kjfd
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ChoosenCareHome.Data.Model.AppRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("ChoosenCareHome.Data.Model.Application", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AgeGroup")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AreYouRelatedOrDoYouKnowAnyMemberOfStaffAtChosenHealthcare")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AssistingWithMedication")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Bath_Shower_StripWash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BedBath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BedMaking_ChangingBedLinen")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Bedpans_CommodesEtc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CareOfFeetExcToeNails")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CareOfFingerNails")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CareOfHair")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChangesInClientsCondition")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChangingACatheterBag")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CollectingBenefits")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Confidentiality")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContinenceCare")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DateOfBirth")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DoYouHaveAValidPassport")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DoYouHaveAccessToACarWhichCanBeUsedForWorkPurposes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DoYouHavePermissionToWorkInTheUk")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DoYouHoldAFullUkDrivingLicence")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DoctorAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DoctorName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DoctorPhone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DoctorPostcode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Dressing_Undressing")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EMail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmptyingCatheterBag")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EthnicOriginBlackAfrican")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EthnicOriginBlackCaribbean")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EthnicOriginBlackOther")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EthnicOriginChinese")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EthnicOriginOther")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EthnicOriginPakistani")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EthnicOriginWhiteEuropean")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EthnicOriginWhiteOther")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullTime_PartTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HaveYouEverBeenConvictedOfACriminalOffence")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Home")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HomeCareAndPopInVisits")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HomeTel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Hospitals")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HowDidYouHearAboutThePost")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IfNo_PleaseSpecifyPreferredAreas")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IfPartTime_HowManyHoursPerWeekDoYouWantToWork_HomeCareAndPopInVisits")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IfYesPleaseGiveDetailsOfAllConvictionsAndCautionsIncludingSpentConvictionsAndCautions")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IfYes_WouldYouLike_LongOrShort_Assignments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Indian")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LightHousework")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ManeuveringAndHandlingCourse")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaritalStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MiddleName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mobile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Morning_Day_Evening_NightSleeperDuty")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MouthCareIncDentures")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NationalInsNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NextOfKin")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nodisability")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nursing_Residential")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nursing_ResidentialHomes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Observing_Recording")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PleaseStateIfYouAreAbleToWorkAsA24_HourResidential_Live_In_Care")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Postcode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PressureAreaCare")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrivateHouse")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RecordingInstructionsFromGp_DistrictNurse")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Registereddisability")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Relationship")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReportWriting")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Shaving")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Shopping")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SimpleDressingProcedure")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TerminalCare")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UnregisteredDisability")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UseOfBathAids")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UseOfHoistsMan_Elec")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UseOfWalkingAids")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId1")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("WashingPersonalLaundry")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WouldYouAcceptALive_InAssignmentSomeDistanceFromYourHome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("YouHaveAValidWorkPermit")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("UserId1");

                    b.ToTable("Applications");
                });

            modelBuilder.Entity("ChoosenCareHome.Data.Model.ApplicationReference", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ApplicationId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FaxNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("From")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameEmployer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("To")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationId");

                    b.ToTable("ApplicationReferences");
                });

            modelBuilder.Entity("ChoosenCareHome.Data.Model.Appointment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DateOfBirth")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EMail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HomeTel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaritalStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MiddleName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mobile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Postcode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Subject")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Appointments");
                });

            modelBuilder.Entity("ChoosenCareHome.Data.Model.Documents", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ApplicationId")
                        .HasColumnType("int");

                    b.Property<string>("FileUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationId");

                    b.ToTable("Documents");
                });

            modelBuilder.Entity("ChoosenCareHome.Data.Model.EmploymentHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AddressOfEmployer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ApplicationId")
                        .HasColumnType("int");

                    b.Property<string>("From")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameOfEmployer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneOfEmployer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PositionDuties")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Reason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("To")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationId");

                    b.ToTable("EmploymentHistories");
                });

            modelBuilder.Entity("ChoosenCareHome.Data.Model.HealthQualification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ApplicationId")
                        .HasColumnType("int");

                    b.Property<string>("Date")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationId");

                    b.ToTable("HealthQualifications");
                });

            modelBuilder.Entity("ChoosenCareHome.Data.Model.Message", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("All")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Read")
                        .HasColumnType("bit");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Messages");
                });

            modelBuilder.Entity("ChoosenCareHome.Data.Model.NewsBlog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("NewsBlogs");
                });

            modelBuilder.Entity("ChoosenCareHome.Data.Model.OccupationalHealthAssessment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ApplicationId")
                        .HasColumnType("int");

                    b.Property<string>("Details")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationId");

                    b.ToTable("OccupationalHealthAssessments");
                });

            modelBuilder.Entity("ChoosenCareHome.Data.Model.Profile", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<int?>("ApplicationId")
                        .HasColumnType("int");

                    b.Property<bool>("ChangePass")
                        .HasColumnType("bit");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("MiddleName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("RegistrationNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<int>("UserStatus")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("ChoosenCareHome.Data.Model.Qualification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ApplicationId")
                        .HasColumnType("int");

                    b.Property<string>("DatesFromTo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GradeResult")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QualificationsItem")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SchoolCollege")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationId");

                    b.ToTable("Qualifications");
                });

            modelBuilder.Entity("ChoosenCareHome.Data.Model.TimeSheet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("TimeSheets");
                });

            modelBuilder.Entity("ChoosenCareHome.Data.Model.Vacination", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ApplicationId")
                        .HasColumnType("int");

                    b.Property<string>("Details")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationId");

                    b.ToTable("Vacinations");
                });

            modelBuilder.Entity("ChoosenCareHome.Data.UserTimeSheet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Break")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan>("EndTime")
                        .HasColumnType("time");

                    b.Property<string>("PostCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("RatePerHour")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Report")
                        .HasColumnType("nvarchar(max)");

                    b.Property<TimeSpan>("StartTime")
                        .HasColumnType("time");

                    b.Property<int?>("TimeSheetId")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("TimeSheetId");

                    b.HasIndex("UserId");

                    b.ToTable("UserTimeSheets");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("ChoosenCareHome.Data.Model.Application", b =>
                {
                    b.HasOne("ChoosenCareHome.Data.Model.Profile", "User")
                        .WithMany()
                        .HasForeignKey("UserId1");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ChoosenCareHome.Data.Model.ApplicationReference", b =>
                {
                    b.HasOne("ChoosenCareHome.Data.Model.Application", "Application")
                        .WithMany("ApplicationReferences")
                        .HasForeignKey("ApplicationId");

                    b.Navigation("Application");
                });

            modelBuilder.Entity("ChoosenCareHome.Data.Model.Documents", b =>
                {
                    b.HasOne("ChoosenCareHome.Data.Model.Application", null)
                        .WithMany("Documents")
                        .HasForeignKey("ApplicationId");
                });

            modelBuilder.Entity("ChoosenCareHome.Data.Model.EmploymentHistory", b =>
                {
                    b.HasOne("ChoosenCareHome.Data.Model.Application", "Application")
                        .WithMany("EmploymentHistories")
                        .HasForeignKey("ApplicationId");

                    b.Navigation("Application");
                });

            modelBuilder.Entity("ChoosenCareHome.Data.Model.HealthQualification", b =>
                {
                    b.HasOne("ChoosenCareHome.Data.Model.Application", "Application")
                        .WithMany("HealthQualifications")
                        .HasForeignKey("ApplicationId");

                    b.Navigation("Application");
                });

            modelBuilder.Entity("ChoosenCareHome.Data.Model.Message", b =>
                {
                    b.HasOne("ChoosenCareHome.Data.Model.Profile", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ChoosenCareHome.Data.Model.OccupationalHealthAssessment", b =>
                {
                    b.HasOne("ChoosenCareHome.Data.Model.Application", "Application")
                        .WithMany("OccupationalHealthAssessments")
                        .HasForeignKey("ApplicationId");

                    b.Navigation("Application");
                });

            modelBuilder.Entity("ChoosenCareHome.Data.Model.Qualification", b =>
                {
                    b.HasOne("ChoosenCareHome.Data.Model.Application", "Application")
                        .WithMany("Qualifications")
                        .HasForeignKey("ApplicationId");

                    b.Navigation("Application");
                });

            modelBuilder.Entity("ChoosenCareHome.Data.Model.Vacination", b =>
                {
                    b.HasOne("ChoosenCareHome.Data.Model.Application", "Application")
                        .WithMany("Vacination")
                        .HasForeignKey("ApplicationId");

                    b.Navigation("Application");
                });

            modelBuilder.Entity("ChoosenCareHome.Data.UserTimeSheet", b =>
                {
                    b.HasOne("ChoosenCareHome.Data.Model.TimeSheet", "TimeSheet")
                        .WithMany("UserTimeSheet")
                        .HasForeignKey("TimeSheetId");

                    b.HasOne("ChoosenCareHome.Data.Model.Profile", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("TimeSheet");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("ChoosenCareHome.Data.Model.AppRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("ChoosenCareHome.Data.Model.Profile", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("ChoosenCareHome.Data.Model.Profile", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("ChoosenCareHome.Data.Model.AppRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ChoosenCareHome.Data.Model.Profile", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("ChoosenCareHome.Data.Model.Profile", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ChoosenCareHome.Data.Model.Application", b =>
                {
                    b.Navigation("ApplicationReferences");

                    b.Navigation("Documents");

                    b.Navigation("EmploymentHistories");

                    b.Navigation("HealthQualifications");

                    b.Navigation("OccupationalHealthAssessments");

                    b.Navigation("Qualifications");

                    b.Navigation("Vacination");
                });

            modelBuilder.Entity("ChoosenCareHome.Data.Model.TimeSheet", b =>
                {
                    b.Navigation("UserTimeSheet");
                });
#pragma warning restore 612, 618
        }
    }
}
